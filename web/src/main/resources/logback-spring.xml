<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <conversionRule conversionWord="ip" converterClass="example.spring.boot.web.configration.LogBackIpConfig"/>
    <springProperty scope="context" name="log.application.name" source="log.application.name"/>
    <springProperty scope="context" name="log.pro.level" source="log.pro.level"/>
    <springProperty scope="context" name="log.dev.level" source="log.dev.level"/>
    <springProperty scope="context" name="log.file.name" source="log.file.name"/>
    <springProperty scope="context" name="log.file.maxIndex" source="log.file.maxIndex"/>
    <springProperty scope="context" name="log.file.maxFileSize" source="log.file.maxFileSize"/>
    <property name="LOG_PATTERN" value="[${log.application.name}] [%ip] [${PID}] [%d{yyyy-MM-dd HH:mm:ss.SSS}] [%p] [%t] [%c] [%M] [%L] : %m%n"/>
	<property name="CONSOLE_LOG_PATTERN"
			  value="%highlight([${log.application.name}] [%ip]) [${PID}] [%d{yyyy-MM-dd HH:mm:ss.SSS}] %cyan([%p]) [%t] %boldMagenta([%c]) : %boldGreen(%m%n)"/>
	<!-- 控制台输出日志 -->
	<appender name="consoleAppender" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>${CONSOLE_LOG_PATTERN}</pattern>
		</encoder>
	</appender>
	<!-- 按照固定窗口模式生成日志文件，当文件大于${log.file.maxFileSize}时，生成新的日志文件。窗口大小是1到${log.file.maxIndex}，当保存了${log.file.maxIndex}个归档文件后，将覆盖最早的日志 -->
	<appender name="fileAppender"
			  class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${catalina.home:-.}/logs/${log.file.name}.log</file>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<fileNamePattern>${catalina.home:-.}/logs/${log.file.name}.%i.log</fileNamePattern>
			<minIndex>1</minIndex>
			<maxIndex>${log.file.maxIndex}</maxIndex>
		</rollingPolicy>
		<triggeringPolicy
				class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>${log.file.maxFileSize}</maxFileSize>
		</triggeringPolicy>
		<encoder>
			<pattern>${LOG_PATTERN}</pattern>
		</encoder>
	</appender>     
    <springProfile name="pro,pre,test,t1,t2,t3">
        <root level="${log.pro.level}">
            <appender-ref ref="fileAppender" />
        </root>    
    </springProfile>
    <springProfile name="dev">
        <root level="${log.dev.level}">
            <appender-ref ref="consoleAppender" />
            <appender-ref ref="fileAppender" />
        </root>    
    </springProfile>            
</configuration>
# 数据库访问配置。
# Spring Boot 2 默认使用的连接池是 HikariCP，其他连接池必须显式指定。
# 主数据源，负责写
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://118.25.52.131:3306/my_test?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8
spring.datasource.username=liuluming
spring.datasource.password=luming@19921217
# 下面为DruidDataSource连接池的补充设置
spring.datasource.initialSize=10
spring.datasource.minIdle=10
spring.datasource.maxActive=100
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000


# 从数据源，负责读(有多个从，这里就要配置多个)
spring.datasource.slave1.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.slave1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.slave1.url=jdbc:mysql://118.25.52.131:3306/my_test?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8
spring.datasource.slave1.username=liuluming
spring.datasource.slave1.password=luming@19921217
# 下面为DruidDataSource slave1连接池的补充设置，
spring.datasource.slave1.initialSize=10
spring.datasource.slave1.minIdle=10
spring.datasource.slave1.maxActive=100
# 配置获取连接等待超时的时间
spring.datasource.slave1.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.slave1.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.slave1.minEvictableIdleTimeMillis=300000
spring.datasource.slave1.validationQuery=SELECT 1 FROM DUAL
spring.datasource.slave1.testWhileIdle=true
spring.datasource.slave1.testOnBorrow=false
spring.datasource.slave1.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.slave1.poolPreparedStatements=true
spring.datasource.slave1.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.slave1.filters=stat,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.slave1.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000



# dao类的包名，该配置可以让我们在xml中写sql时，namespace可以省略包名。
mybatis.typeAliasesPackage=example.spring.boot.dao.model
mybatis.mapper-locations=classpath:example/spring/boot/dao/mapper/*.xml
# 使用CLI来实现AOP,其不需要接口（spring默认使用jdk的动态代理，只能代理接口）
spring.aop.proxy-target-class=true
spring.mail.host=smtp-mail.outlook.com
spring.mail.username=luming1617@outlook.com
spring.mail.password=liu19890602
spring.mail.port=587
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true